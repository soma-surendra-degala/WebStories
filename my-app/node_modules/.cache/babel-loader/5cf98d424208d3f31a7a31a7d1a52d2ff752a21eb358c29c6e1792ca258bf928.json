{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surid\\\\Desktop\\\\Web Stories\\\\my-app\\\\src\\\\components\\\\Stories\\\\Stories.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Stories.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stories() {\n  _s();\n  const {\n    id\n  } = useParams(); // ðŸ‘ˆ Get story ID from route\n  const [story, setStory] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/stories/${id}`).then(res => res.json()).then(data => setStory(data)).catch(err => console.error('Error fetching story:', err));\n  }, [id]);\n  if (!story) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"story-viewer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: story.image || story.thumbnail,\n        alt: story.title,\n        className: \"story-full-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"story-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: story.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: story.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Stories, \"RMcuYrhBkNWxPYdlyZak38RgV/s=\", false, function () {\n  return [useParams];\n});\n_c = Stories;\nexport default Stories;\nvar _c;\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Stories","_s","id","story","setStory","fetch","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","image","thumbnail","alt","title","quote","_c","$RefreshReg$"],"sources":["C:/Users/surid/Desktop/Web Stories/my-app/src/components/Stories/Stories.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Stories.css';\r\n\r\nfunction Stories() {\r\n  const { id } = useParams(); // ðŸ‘ˆ Get story ID from route\r\n  const [story, setStory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/api/stories/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setStory(data))\r\n      .catch((err) => console.error('Error fetching story:', err));\r\n  }, [id]);\r\n\r\n  if (!story) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"story-viewer\">\r\n      <div className=\"story-box\">\r\n        <img src={story.image || story.thumbnail} alt={story.title} className=\"story-full-img\" />\r\n        <div className=\"story-details\">\r\n          <h2>{story.title}</h2>\r\n          <p>{story.quote}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stories;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,qCAAqCH,EAAE,EAAE,CAAC,CAC7CI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,KAAK,EAAE,oBAAOJ,OAAA;IAAAe,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEpC,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAL,QAAA,eAC3Bf,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACxBf,OAAA;QAAKqB,GAAG,EAAEjB,KAAK,CAACkB,KAAK,IAAIlB,KAAK,CAACmB,SAAU;QAACC,GAAG,EAAEpB,KAAK,CAACqB,KAAM;QAACL,SAAS,EAAC;MAAgB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzFnB,OAAA;QAAKoB,SAAS,EAAC,eAAe;QAAAL,QAAA,gBAC5Bf,OAAA;UAAAe,QAAA,EAAKX,KAAK,CAACqB;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBnB,OAAA;UAAAe,QAAA,EAAIX,KAAK,CAACsB;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAxBQD,OAAO;EAAA,QACCH,SAAS;AAAA;AAAA6B,EAAA,GADjB1B,OAAO;AA0BhB,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}