{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surid\\\\Desktop\\\\Web Stories\\\\my-app\\\\src\\\\components\\\\StoryGrid\\\\StoryGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './StoryGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StoryGrid({\n  onSelectStory,\n  filterCategory\n}) {\n  _s();\n  const [stories, setStories] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/stories').then(res => res.json()).then(data => {\n      const filtered = filterCategory ? data.filter(story => {\n        var _story$category;\n        return ((_story$category = story.category) === null || _story$category === void 0 ? void 0 : _story$category.toLowerCase()) === filterCategory.toLowerCase();\n      }) : data;\n      setStories(filtered);\n    }).catch(err => console.error('Fetch error:', err));\n  }, [filterCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"story-grid\",\n    children: stories.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No stories found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : stories.map(story => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-card\",\n      onClick: () => onSelectStory(story._id),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: story.thumbnail,\n        alt: story.title,\n        className: \"story-full-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, story._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(StoryGrid, \"cTz//Yl5IQLyRPBEoAItnTUhr1w=\");\n_c = StoryGrid;\nexport default StoryGrid;\nvar _c;\n$RefreshReg$(_c, \"StoryGrid\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StoryGrid","onSelectStory","filterCategory","_s","stories","setStories","fetch","then","res","json","data","filtered","filter","story","_story$category","category","toLowerCase","catch","err","console","error","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_id","src","thumbnail","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/surid/Desktop/Web Stories/my-app/src/components/StoryGrid/StoryGrid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './StoryGrid.css';\r\n\r\nfunction StoryGrid({ onSelectStory, filterCategory }) {\r\n  const [stories, setStories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/stories')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const filtered = filterCategory\r\n          ? data.filter(story => story.category?.toLowerCase() === filterCategory.toLowerCase())\r\n          : data;\r\n        setStories(filtered);\r\n      })\r\n      .catch(err => console.error('Fetch error:', err));\r\n  }, [filterCategory]);\r\n\r\n  return (\r\n    <div className=\"story-grid\">\r\n      {stories.length === 0 ? (\r\n        <p>No stories found.</p>\r\n      ) : (\r\n        stories.map((story) => (\r\n          <div\r\n            key={story._id}\r\n            className=\"story-card\"\r\n            onClick={() => onSelectStory(story._id)}\r\n          >\r\n            <img src={story.thumbnail} alt={story.title} className=\"story-full-img\" />\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,aAAa;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,QAAQ,GAAGT,cAAc,GAC3BQ,IAAI,CAACE,MAAM,CAACC,KAAK;QAAA,IAAAC,eAAA;QAAA,OAAI,EAAAA,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,WAAW,CAAC,CAAC,MAAKd,cAAc,CAACc,WAAW,CAAC,CAAC;MAAA,EAAC,GACpFN,IAAI;MACRL,UAAU,CAACM,QAAQ,CAAC;IACtB,CAAC,CAAC,CACDM,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC,CAAC;EACrD,CAAC,EAAE,CAAChB,cAAc,CAAC,CAAC;EAEpB,oBACEH,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBlB,OAAO,CAACmB,MAAM,KAAK,CAAC,gBACnBxB,OAAA;MAAAuB,QAAA,EAAG;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAExBvB,OAAO,CAACwB,GAAG,CAAEf,KAAK,iBAChBd,OAAA;MAEEsB,SAAS,EAAC,YAAY;MACtBQ,OAAO,EAAEA,CAAA,KAAM5B,aAAa,CAACY,KAAK,CAACiB,GAAG,CAAE;MAAAR,QAAA,eAExCvB,OAAA;QAAKgC,GAAG,EAAElB,KAAK,CAACmB,SAAU;QAACC,GAAG,EAAEpB,KAAK,CAACqB,KAAM;QAACb,SAAS,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAJrEd,KAAK,CAACiB,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CAhCQH,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAkClB,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}